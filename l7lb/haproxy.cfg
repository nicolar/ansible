#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

    tune.ssl.default-dh-param 2048

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  forwardfor  except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen stats
    bind *:9443 ssl crt /etc/haproxy/example.com.pem
    mode http
    maxconn 10
    no log
    
    acl network_allowed src 127.0.0.0/8
    acl network_allowed src 10.0.0.0/8
    tcp-request connection reject if !network_allowed
    
    stats enable
    stats refresh 10s
    stats uri /stats

frontend plain_http
    bind *:80
    redirect scheme https if !{ ssl_fc }

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:443 ssl crt /etc/haproxy/example.com.pem
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    #http-request add-header WL-Proxy-Client-IP %[src]

    ## SOA12DEV
    acl soa12dev_url             hdr_beg(host) -i soa12-dev.
    use_backend soa12dev_be      if soa12dev_url

    ## SOA12QA
    acl soa12qa_url              hdr_beg(host) -i soa12-qa
    use_backend soa12qa_be       if soa12qa_url

    ## SOA12DEV-DH
    acl soa12devdh_url            hdr_beg(host) -i soa12-dev-dh.
    use_backend soa12devdh_be     if soa12devdh_url

    #default_backend              haproxy_be

backend soa12dev_be
    balance     roundrobin
    cookie HAPROXYSRV insert nocache
    option httpchk
    server  soa12-dev-wt01 10.211.9.11:8777 cookie soa12-dev-wt01 check
    server  maintenance 127.0.0.1:3000 check backup

backend soa12qa_be
    balance     roundrobin
    cookie HAPROXYSRV insert nocache
    #option httpchk
    server  soa12-qa-wt01 10.211.9.12:8777 cookie soa12-qa-wt01 check
    server  soa12-qa-wt02 10.211.9.13:8777 cookie soa12-qa-wt02 check
    server  maintenance 127.0.0.1:3000 check backup

backend soa12devdh_be
    balance     roundrobin
    cookie HAPROXYSRV insert nocache
    option httpchk
    server  soa12-dev-wt02 10.211.9.17:8777 cookie soa12-dev-wt02 check
    server  maintenance 127.0.0.1:3000 check backup
